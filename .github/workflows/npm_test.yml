name: NPM Test

on: [pull_request]

jobs:
    build:
        runs-on: ubuntu-latest

        services:
            mariadb:
                image: mariadb:latest
                ports:
                    - 3306
                env:
                    MYSQL_USER: blogly
                    MYSQL_PASSWORD: blogly
                    MYSQL_DATABASE: blogly
                    MYSQL_ROOT_PASSWORD: rootpassword
                options:
                    --health-cmd="mysqladmin ping" --health-interval=5s
                    --health-timeout=2s --health-retries=3
 
            elastic:
                image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
                ports:
                    - 9200
                env:
                    bootstrap.memory_lock: true
                    ES_JAVA_OPTS: -Xms256m -Xmx256m
                    discovery.type: single-node
                    http.cors.enabled: true
                    http.cors.allow-origin: https://app.elasticvue.com

        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: '12.x'

            - name: Install dependencies
              run: npm install --dev

            - name: Verify MariaDB connection
              env:
                  PORT: ${{ job.services.mariadb.ports[3306] }}
              run: |
                  while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
                    sleep 1
                  done

            - name: Verify Elasticsearch connection
              env:
                  PORT: ${{ job.services.elastic.ports[9200] }}
              run: |
                  curl --verbose --show-error http://127.0.0.1:$PORT

            - name: Create database tables
              run: npm run createDB

            - name: Test
              env:
                  DB_HOST: 127.0.0.1
                  DB_PORT: ${{ job.services.mariadb.ports[3306] }}
                  DB_USER: blogly
                  DB_PASSWORD: blogly
                  DB_NAME: blogly
                  OAUTH20_CLIENT_ID: test
                  OAUTH20_CLIENT_SECRET: test
                  EXPRESS_SESSION_KEY: test
                  TWILIO_CLIENT_ID: ACtest
                  TWILIO_CLIENT_SECRET: test
                  TWILIO_PHONE_NUMBER: '+11234567890'
              run: |
                  npm run test
